import ddf.minim.*;
import ddf.minim.analysis.*;
import ddf.minim.effects.*;
import ddf.minim.signals.*;
import ddf.minim.spi.*;
import ddf.minim.ugens.*;

Minim minim;
AudioPlayer player;
AudioBuffer buffer;

void setup() 
{
  colorMode(HSB);
  size(1024, 512);
  minim  = new Minim(this);
  player = minim.loadFile("Namine.mp3", width); 
  player.play ();
  buffer = player.mix;
}

void draw () 
{
  background(0);
  for (int i = 0; i < buffer.size(); i ++) 
  {
    fill(255);
    PFont f = createFont("georgia", 50);
    String s = "TEST";
    textSize(30);
    textFont(f);
    float c = map(i, 0, buffer.size(), 0, 255); 
    stroke(c, 255, 255);
    fill(c, 255, 255);
    float sample = buffer.get(i) * (height / 2);
    text(s, width/2, height/2 * sample);
  }
}
